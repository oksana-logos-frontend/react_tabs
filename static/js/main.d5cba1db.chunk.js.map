{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","tabs","selectedTabId","handelClick","className","map","tab","classNames","id","href","onClick","title","content","App","useState","selectedTab","setSelectedTab","find","onTabSelected","ReactDOM","render","document","getElementById"],"mappings":"2NAeaA,EAA2BC,IAAMC,MAC5C,YAIO,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BAEIH,EAAKI,KAAI,SAACC,GACR,OACE,oBAEEF,UAAWG,IACT,CAAE,YAAaD,EAAIE,KAAON,EAAcM,KAE1C,UAAQ,MALV,SAOE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,kBAAMP,EAAYG,IAH7B,SAKGA,EAAIK,SAXFL,EAAIE,WAoBrB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAcU,gBCtCZX,EAAO,CAClB,CAAEO,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASb,EAAK,GAAGO,IAAvD,mBAAOO,EAAP,KAAoBC,EAApB,KACMd,EAAgBD,EAAKgB,MAAK,SAAAX,GAAG,OAAIA,EAAIE,KAAOO,MAAgBd,EAAK,GAYvE,OACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,EAAcS,SAGpC,cAACb,EAAD,CACEG,KAAMA,EACNC,cAAeA,EACfC,YAfc,SAACG,GACfS,IAAgBT,EAAIE,IALJ,SAACF,GACrBU,EAAeV,EAAIE,IAKjBU,CAAcZ,UCzBpBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d5cba1db.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface TabsType {\n  tabs: Props[],\n  selectedTabId: Props,\n  handelClick: (value: Props) => void,\n}\n\nexport const Tabs: React.FC<TabsType> = React.memo(\n  ({\n    tabs,\n    selectedTabId,\n    handelClick,\n  }) => {\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {\n              tabs.map((tab) => {\n                return (\n                  <li\n                    key={tab.id}\n                    className={classNames(\n                      { 'is-active': tab.id === selectedTabId.id },\n                    )}\n                    data-cy=\"Tab\"\n                  >\n                    <a\n                      href={`#${tab.id}`}\n                      data-cy=\"TabLink\"\n                      onClick={() => handelClick(tab)}\n                    >\n                      {tab.title}\n                    </a>\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTabId.content}\n        </div>\n      </div>\n\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n  const selectedTabId = tabs.find(tab => tab.id === selectedTab) || tabs[0];\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab.id);\n  };\n\n  const handelClick = (tab: Tab) => {\n    if (selectedTab !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        handelClick={handelClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}